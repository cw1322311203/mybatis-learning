<?xml version="1.0" encoding="UTF-8" ?>
<!--MyBatis的DTD约束-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    mapper：核心根标签
    namespace属性：名称空间
    TODO 映射配置文件包含了数据和对象之间的映射关系以及要执行的 SQL 语句
-->
<mapper namespace="com.cw.mapper.StudentMapper">

    <sql id="select">select * from student</sql>

    <!--
        select：查询功能的标签
        id属性：唯一标识
        resultType属性：指定结果映射对象类型，默认使用全限定域名，这里是因为在核心配置文件中使用typeAliases标签起了别名才可只使用student
        parameterType属性：指定参数映射对象类型
    -->
    <select id="selectAll" resultType="student">
        <include refid="select"/>
    </select>

    <select id="selectById" resultType="student" parameterType="int">
        <include refid="select"/> where id = #{id}
    </select>

    <insert id="insert" parameterType="student">
        insert into student values (#{id},#{name},#{age})
    </insert>

    <update id="update" parameterType="student">
        update student set name = #{name},age = #{age} where id = #{id}
    </update>

    <delete id="delete" parameterType="int">
        delete from student where id = #{id}
    </delete>

    <select id="selectCondition" resultType="student" parameterType="student">
        <include refid="select"/>
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="name != null">
                and name = #{name}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
        </where>
    </select>

    <select id="selectByIds" resultType="student" parameterType="list">
        <include refid="select"/>
        <where>
            <foreach collection="list" open="id in (" close=")" item="id" separator=",">
                #{id}
            </foreach>
        </where>
    </select>
</mapper>